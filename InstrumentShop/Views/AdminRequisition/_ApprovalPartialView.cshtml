@using InstrumentShop.Models;

@model List<ViewRequisitionForm>

<style>
    .approval-container {
        margin-top: 250px;
        text-align: center;
        font-family: 'Arial', sans-serif;
        background-color: #f8f8f8;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .approval-header {
        font-size: 20px;
        color: #333;
        font-weight: 600;
        margin-bottom: 20px;
    }

    .approval-details {
        font-size: 18px;
        color: #555;
        margin-bottom: 10px;
        text-align: left;
    }

    .detail-item {
        margin-bottom: 10px;
    }

    .total-cost {
        font-weight: bold;
    }

    .approval-actions {
        margin-top: 15px;
    }

    .note textarea {
        width: 100%;
        font-size: 12px;
        padding: 8px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        height: auto;
    }

    .left-aligned {
        text-align: left;
    }

</style>

<div class="approval-container">
    <form class="save-form" method="post" action="@Url.Action("ApproveRequest", "AdminRequisition")">
        <div class="approval-header">
            You are about to approve a request!
        </div>

        <div class="approval-details">
            <div class="detail-item">
                Requisition form #: <strong>@Model.First().RF_Code</strong>
            </div>

            <div class="detail-item">
                Date requested: <strong>@DateTime.Parse(Model.First().RF_Daterequested).ToString("MMMM dd, yyyy")</strong>
            </div>

            <div class="detail-item">
                Total cost: <strong class="total-cost"></strong>
            </div>

            @{
                string both = "This request contains item(s) that were added by the admin and were declined.";
                string decline = "This request contains item(s) that were declined.";
                string canvas = "This request contains the item(s) that the admin added.";
            }

        <div class="detail-item note" style="font-size: 15px">
            Note: (Optional)
            <textarea name="ApprovalNote" id="ApprovalNote">
        @if (Model.Any(form => form.RF_ItemStatus == "Canvas") && Model.Any(form => form.RF_ItemStatus == "Declined"))
        {
            @both
        }
        else
        {
            if (Model.Any(form => form.RF_ItemStatus == "Declined"))
            {
                @decline
            }
            if (Model.Any(form => form.RF_ItemStatus == "Canvas"))
            {
                var canvasForms = Model.Where(form => form.RF_ItemStatus == "Canvas").ToList();
                @canvas
                @*if (canvasForms.Any())
                {
                    <text>(</text>
                    foreach (var form in canvasForms)
                    {
                        <text>@form.RF_Item</text>
                        if (canvasForms.Count > 1 && form != canvasForms.Last())
                        {
                            <text>,</text>
                        }
                    }
                    <text>)</text>
                }*@
            }
        }

    </textarea>
        </div>
            <p style="font-size: 12px; color: darkred; font-weight: 400">Once a request has been approved, no further changes are permitted.</p>
        </div>
            <input type="hidden" name="request_ID" value="@Model.First().RF_ID" />

            <input type="hidden" name="EstimateTotal" id="EstimateTotal" />

        <div class="approval-actions">
            <button class="btn btn-style btn-style-3 approve-btn" onmouseover="this.style.backgroundColor='#4CAF50'" onmouseout="this.style.backgroundColor='#05a4f1'">
                Approve Request
            </button>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    
    // Event handler for dropdown change
        $("#selectedStatus").change(function () {
            updateTotalEstimatedCost();
        });

    function updateTotalEstimatedCost() {
        // Get all elements whose IDs start with "total"
        var totalElements = $("[id^=total]");

        // Initialize total cost
        var totalCost = 0;
        var canvasTotal = 0; // Initialize total value for "Canvas" items

        // Loop through all total elements and sum their values
        totalElements.each(function () {
            var totalValue = parseFloat($(this).val()) || 0;

            // Check RF_ItemStatus and modify totalValue for items with RF_ItemStatus = "Canvas"
            if (totalValue > 0) {
                // Check if RF_ItemStatus is "Canvas"
                var isCanvasItem = $(this).closest("tr").find("[name=RF_ItemStatus]").val() === "Canvas";

                // Add totalValue to the corresponding total based on RF_ItemStatus
                if (isCanvasItem) {
                    canvasTotal += totalValue; // Add to the total value for "Canvas" items
                } else {
                    totalCost += totalValue; // Add to the total value for other items
                }
            }
        });

        // Check if RF_Status is "Approved" and subtract total value of "Canvas" items
        if ($("#selectedStatus").val() === "Approved") {
            totalCost += canvasTotal;
        }

        // Set the total value to the hidden input field (assuming it has the ID "EstimateTotal")
        $("#EstimateTotal").val(totalCost.toFixed(2));

        // Display total cost in the 'Total estimated cost' cell with commas for better readability
        $(".total-cost").text("₱ " + totalCost.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
    }
</script>
