@using InstrumentShop.Models
@{ 
    DateTime? minDate = ViewBag.MinDate;
    DateTime? maxDate = ViewBag.MaxDate;
}
@model List<requisitionDetails>

<!DOCTYPE html>
<html>
<head>
    <link href="~/Gridview.css" rel="stylesheet" />
    <link href="~/Content/modal.css" rel="stylesheet" />
    <link href="~/Content/StaffTextBox.css" rel="stylesheet" />
    <link href="~/Content/staff.css" rel="stylesheet" />
</head>
<body>
    <section class="home-section">
        <div class="home-content">
            <i class='bx bx-menu'></i>
            <span class="text">Recycle bin</span>
        </div>

        <div style="margin-left: 50px">
            <form class="edit-form" method="post" action="@Url.Action("Requisition", "AdminRequisition")">
                <button class="btn btn-style-3 edit-btn" type="submit">
                    <i class='bx bx-left-arrow-alt'></i>&emsp;<strong>Back</strong>
                </button>
            </form>
        </div>

        @{
            // Get the selected status and date from the updated query string
            var fromDate = Request.QueryString["fromDate"];

            // Define a variable to hold the requisitions
            List<requisitionDetails> sortedRequisitions;

            // Check if a specific date is selected and is in a valid format
            if (!string.IsNullOrEmpty(fromDate) && DateTime.TryParse(fromDate, out var parsedDate))
            {
                // Filter requisitions based on date
                sortedRequisitions = Model
                    .Where(r => DateTime.Parse(r.rf_date_requested).Date == parsedDate.Date)
                    .OrderByDescending(r => DateTime.Parse(r.rf_date_requested))
                    .ToList();
            }
            else
            {
                // No specific date selected or invalid date format,
                sortedRequisitions = Model
                    .OrderByDescending(r => DateTime.Parse(r.rf_date_requested))
                    .ToList();
            }
        }

        <!-- Search for requisition -->
        <div class="search-container" style="display: flex">
            <div class="search-wrapper">
                <label>
                    Search through date: &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;@* From: *@
                </label><br />
                <input type="date" name="fromSearch" class="search-box" id="searchBox1" min="@((minDate ?? DateTime.MinValue).ToString("yyyy-MM-dd"))" max="@((maxDate ?? DateTime.MaxValue).ToString("yyyy-MM-dd"))" onchange="updateRequisitions()">
                <button type="button" class="btn btn-style-3" onclick="window.location.href='/AdminRequisition/RecycleBin'">
                    Refresh
                </button>
            </div>
        </div>
        <!-- Search for requisition -->

        @if (Model != null && Model.Any())
        {
            <div class="table-wrapper" style="width: 90%; margin-top: 40px;">
                <table class="fl-table" id="item-list" style="width: 100%; font-size: 14px">
                    <colgroup>
                        <col width="3%">
                        <col width="15%">
                        <col width="15%">
                        <col width="15%">
                        <col width="15%">
                        <col width="5%">
                        <col width="5%">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Requisition code</th>
                            <th>Requested date</th>
                            <th>Estimated cost</th>
                            <th>Status</th>
                            <th>View</th>
                            <th>Restore</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var details in sortedRequisitions)
                        {
                            <tr style="text-align: center;">
                                <td><p class="row-number"></p></td>
                                <td>@details.rf_code</td>
                                <td>@DateTime.Parse(details.rf_date_requested).ToShortDateString()</td>
                                <td>@details.rf_estimated_cost.ToString("C", new System.Globalization.CultureInfo("en-PH"))</td>
                                <td>@details.rf_status</td>
                                <td>
                                    <form class="edit-form" method="post" action="@Url.Action("ViewRequisition", "AdminRequisition")">
                                        <input type="hidden" name="request_ID" value="@details.rf_id" />
                                        <button class="btn btn-style-3 edit-btn" type="submit" style="color: white">
                                            <i class='bx bx-detail'></i>
                                        </button>
                                    </form>
                                </td>
                                <td>
                                    <form class="restore-form" method="post" action="@Url.Action("restoreRequisition", "AdminRequisition")">
                                        <input type="hidden" name="restore_ID" value="@details.rf_id" />
                                        <button class="btn btn-style-3 restore-btn" type="button" onclick="confirmRestore(this, '@details.rf_status')" style="color: white">
                                            <strong>Restore</strong>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="table-wrapper" style="width: 90%; margin-top: 40px; text-align: center;">
                <p style="font-size: large"><strong>No deleted requisitions</strong></p>
            </div>
        }
    </section>

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        // ===Add row numbers to each row in the table
        document.addEventListener("DOMContentLoaded", function () {
            var rowNumbers = document.querySelectorAll('.row-number');
            rowNumbers.forEach(function (element, index) {
                element.textContent = index + 1;
            });
        });

        function confirmRestore(button, status) {
            if (status === 'Cancelled') {
                alert('It is not possible to restore a requisition that has been marked as Cancelled. This action can only be performed by an authorized staff member.');
            } else {
                // Ask for confirmation before proceeding with the restoration
                var confirmation = window.confirm('Are you sure you want to restore this requisition?');

                if (confirmation) {
                    // If the user confirms, proceed with the restoration
                    button.closest('form').submit();
                } else {
                    // If the user cancels, do nothing
                }
            }
        }

        // Get the selected date from the query string
        var selectedDateFromQueryString = '@Request.QueryString["fromDate"]';

        // Set the selected value of the date picker
        $('#searchBox1').val(selectedDateFromQueryString);

        function updateQueryString() {
            var fromDate = $("#searchBox1").val();

            // Update the URL with the new query string
            var url = new URL(window.location.href);
            url.searchParams.set("fromDate", fromDate);

            // Redirect to the updated URL
            window.location.href = url.toString();
        }

        // Attach the updateQueryString function to the onchange event of date picker
        $("#searchBox1").on("change", function () {
            updateQueryString();
        });

    </script>

</body>
</html>