﻿@using InstrumentShop.Models
@{
    ViewBag.Title = "Requisition";
    Layout = "~/Views/Shared/_StaffLayout.cshtml";
    DateTime? minDate = ViewBag.MinDate;
    DateTime? maxDate = ViewBag.MaxDate;
}
@model List<requisitionDetails>

<!-- inner banner -->
<section class="inner-banner py-5">
    <div class="w3l-breadcrumb py-lg-5">
        <div class="container pt-4 pb-sm-4">
            <h4 class="inner-text-title pt-5">Requisition</h4>
            <ul class="breadcrumbs-custom-path">
                <li><a href="/Home/Index">Home</a></li>
                <li class="active"><i class="fas fa-angle-right"></i>Requisition</li>
            </ul>
        </div>
    </div>
</section>
<!-- //inner banner -->
<!-- Content block -->
<div class="w3l-grids-block-5 py-5">
    <div class="container py-md-5 py-4">
        @if (Model != null && Model.Any())
        {
            <div class="title-main text-center mx-auto mb-md-5 mb-4" style="max-width:500px;">
                <p class="text-uppercase">Geltan's Music Zone</p>
                <h3 class="title-style">Requisitions</h3>
            </div>
            <div class="text-start" style="margin-left: 71%; display: flex;">
                <form class="submit-form" method="post" action="@Url.Action("CreateNewRequisition", "Home")">
                    <button type="submit" class="btn btn-style btn-style-3"><i class="fas fa-plus-circle"></i>&emsp;Create new</button>
                </form>&emsp;
                <form class="bin-form" method="post" action="@Url.Action("CancelledRequest", "Home")">
                    <button type="submit" class="btn btn-style btn-style-3"><i class="fas fa-trash"></i>&emsp;Bin</button>
                </form>
            </div>

            <br />
            <!-- Search for requisition -->
            <div class="search-container" style="display: flex">
                <div class="search-wrapper">
                    <label>
                        Search through date: &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;@* From: *@
                    </label><br />
                    <input type="date" name="fromSearch" class="search-box" id="searchBox1" min="@((minDate ?? DateTime.MinValue).ToString("yyyy-MM-dd"))" max="@((maxDate ?? DateTime.MaxValue).ToString("yyyy-MM-dd"))" onchange="updateRequisitions()">
                    <button type="button" class="btn btn-style-3" onclick="window.location.href='/Home/Requisition'">
                        Refresh
                    </button>
                </div>
            </div>
            <!-- Search for requisition -->


            <!-- Dropdown for requisition -->
            <div class="row requisition-block" style="margin-left: 5px;">
                <div class="col-sm-6" style="width: 250px;">
                    <select name="selectedStatus" id="selectedStatus" required="" class="requisition-select">
                        <option value="All" @(string.IsNullOrEmpty(Request.QueryString["selectedStatus"]) ? "selected" : "")>All</option>
                        <option value="Pending" @(Request.QueryString["selectedStatus"] == "Pending" ? "selected" : "")>Pending</option>
                        <option value="Approved" @(Request.QueryString["selectedStatus"] == "Approved" ? "selected" : "")>Approved</option>
                        <option value="Declined" @(Request.QueryString["selectedStatus"] == "Declined" ? "selected" : "")>Declined</option>
                    </select>
                </div>
            </div>
            <!-- Dropdown for requisition -->

            <div class="row justify-content-center">
                <div class="row">

                    @{
                        // Get the selected status and date from the updated query string
                        var selectedStatus = Request.QueryString["selectedStatus"];
                        var fromDate = Request.QueryString["fromDate"];

                        // Define a variable to hold the requisitions
                        List<requisitionDetails> sortedRequisitions;

                        // Check if a specific date is selected and is in a valid format
                        if (!string.IsNullOrEmpty(fromDate) && DateTime.TryParse(fromDate, out var parsedDate))
                        {
                            // Filter requisitions based on both status and date
                            sortedRequisitions = Model
                                .Where(r => (selectedStatus == "All" || r.rf_status == selectedStatus) && DateTime.Parse(r.rf_date_requested).Date == parsedDate.Date)
                                .OrderByDescending(r => DateTime.Parse(r.rf_date_requested))
                                .ToList();
                        }
                        else
                        {
                            // No specific date selected or invalid date format, show requisitions with the selected status
                            sortedRequisitions = Model
                                .Where(r => string.IsNullOrEmpty(selectedStatus) || r.rf_status == selectedStatus)
                                .OrderByDescending(r => DateTime.Parse(r.rf_date_requested))
                                .ToList();
                        }
                    }




                    @if (sortedRequisitions.Any())
                    {
                        // Display requisitions
                        foreach (var details in sortedRequisitions)
                        {
                            <div class="col-lg-4 col-md-6 mb-4" style="margin-bottom: 20px;">
                                <div class="supplier-card-single" data-status="@details.rf_status">
                                    <div class="content-main-top">
                                        <ul class="list-unstyled d-flex align-items-center justify-content-between">
                                            <li>
                                                <i class="fas fa-id-card"></i>&nbsp; Requisition code:
                                            </li>
                                        </ul>
                                        <h4><a>@details.rf_code</a></h4>
                                        <p><strong>Date requested:</strong>&emsp; @details.rf_date_requested</p>
                                        <p><strong>Estimated cost:</strong>&emsp; @details.rf_estimated_cost.ToString("C", new System.Globalization.CultureInfo("en-PH"))</p>
                                        <p><strong>Status:</strong>&emsp; @details.rf_status</p>
                                        <div class="top-content-border d-flex align-items-center justify-content-between mt-4 pt-4">
                                            <a class="btn btn-style-primary" style="margin-left: 200px" href="/Home/RequisitionDetails?request_ID=@details.rf_id">
                                                Know Details <i class="fas fa-arrow-right"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-12 text-center">
                            @{
                                var statusMessage = "--- NO " + (selectedStatus == null || selectedStatus == "All" ? "ALL" : selectedStatus.ToUpper()) + " REQUISITIONS ---";
                            }
                            <h3 class="text-uppercase" style="font-size: 25px; font-style: italic">@statusMessage</h3>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="title-main text-center mx-auto mb-md-5 mb-4" style="max-width:500px;">
                <p class="text-uppercase">Geltan's Music Zone</p>
                <h3 class="title-style">No Requisitions</h3>
            </div>
            <div class="text-start" style="margin-left: 71%; display: flex;">
                <form class="submit-form" method="post" action="@Url.Action("CreateNewRequisition", "Home")">
                    <button type="submit" class="btn btn-style btn-style-3"><i class="fas fa-plus-circle"></i>&emsp;Create new</button>
                </form>&emsp;
                <form class="bin-form" method="post" action="@Url.Action("CancelledRequest", "Home")">
                    <button type="submit" class="btn btn-style btn-style-3"><i class="fas fa-trash"></i>&emsp;Bin</button>
                </form>
            </div>
        }
    </div>
</div>
<!-- Content block -->

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    //$(document).ready(function () {
    //    // Trigger form submission on search box change
    //    $('#searchBox').on('input', function () {
    //        // Submit the form
    //        $('form').submit();
    //    });
    //});

    // Get the selected date from the query string
    var selectedDateFromQueryString = '@Request.QueryString["fromDate"]';

    // Set the selected value of the date picker
    $('#searchBox1').val(selectedDateFromQueryString);

    function updateQueryString() {
        var selectedStatus = $("#selectedStatus").val();
        var fromDate = $("#searchBox1").val();

        // Update the URL with the new query string
        var url = new URL(window.location.href);
        url.searchParams.set("selectedStatus", selectedStatus);
        url.searchParams.set("fromDate", fromDate);

        // Redirect to the updated URL
        window.location.href = url.toString();
    }

    // Attach the updateQueryString function to the onchange event of the dropdown and date picker
    $("#selectedStatus, #searchBox1").on("change", function () {
        updateQueryString();
    });
</script>