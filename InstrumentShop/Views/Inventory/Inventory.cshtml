@model List<InstrumentShop.Models.Product>
<head>
    <link href="~/Gridview.css" rel="stylesheet" />
    <link href="~/Content/modal.css" rel="stylesheet" />
    <link href="~/Content/StaffTextBox.css" rel="stylesheet" />
</head>

<section class="home-section">
    <div class="home-content">
        <i class='bx bx-menu'></i>
        <span class="text">INVENTORY</span>
    </div>
    <br /><br /><br /><br />
    <form class="register-form">
        <div class="form-group">
            @* <button type="button" style="margin-left: 75%;" onclick="openAddProduct()" class="bx bx-cart-add">Submit</button>*@

            <i class='bx bxs-cart-add' onclick="openAddProduct()" style="margin-left:90%; font-size: 35px; color: darkgreen;"></i>

        </div>
        <div class="table-wrapper">
            <table class="fl-table">
                <thead>
                    <tr>
                        <th>Code</th>
                        <th>Name</th>
                        <th>Status</th>
                        <th>Quantity on Hand</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr>
                            <td>@Html.Raw($"<i class='bx bx-qr-scan'></i> {product.prodCode}")</td>
                            <td>@Html.Raw($"<i class='bx bxs-user'></i> {product.prodName}")</td>
                            <td>
                                @if (product.status == "ACTIVE")
                                {
                                    <i class='bx bxs-check-circle' style="color: green"></i>
                                    <strong>ACTIVE</strong>
                                }
                                else if (product.status == "INACTIVE")
                                {
                                    <i class='bx bxs-x-circle' style="color: red"></i>
                                    <strong>INACTIVE</strong>
                                }
                            </td>
                            <td>@Html.Raw($"<i class='bx bxs-coin-stack'></i> {product.qoh}")</td>
                            <td>
                                <a href="javascript:void(0);" onclick="openProdDetailModal('@product.prodCode', '@product.prodName', '@product.prodDesc', '@product.prodPrice', '@product.qoh', '@product.compName')">
                                    <i class='bx bxs-user-detail' style="color: darkblue"></i>
                                </a>

                                &nbsp;&nbsp;
                                <a href="javascript:void(0);" onclick="openProdEditModal('@product.prodId', '@product.prodCode', '@product.cat', '@product.prodName', '@product.prodDesc', '@product.prodPrice', '@product.qoh', '@product.comp', supList, '@product.compName')">
                                    <i class='bx bxs-edit-alt' style="color: orange"></i>
                                </a>

                                &nbsp;&nbsp;
                                <a href="@Url.Action("DeleteProduct", new { prodId = product.prodId})">
                                    <i class='bx bxs-trash' style="color: red"></i>
                                </a>
                                <a href="@Url.Action("ReactivateProduct", new { prodId = product.prodId})">
                                    <i class='bx bxs-bulb' style="color: green;"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div id="detailModal"></div>
        <div id="editModal"> </div>
        <div id="supDetailModal"></div>
        <div id="editSupModal"></div>
        <div id="addProd"></div>
        <div id="editProdModal"></div>
        <div id="prodDetailModal"></div>
    </form>
    @{
        var serializedSupList = Json.Encode(ViewBag.suppList);
    }
    <script>
    var supList = @Html.Raw(serializedSupList);

        function openProdEditModal(prodId, prodCode, prodCat, prodName, prodDesc, prodPrice, qoh, supplier, supList) {
        // The rest of your function remains unchanged
        document.getElementById('editModal').innerHTML = `
            <!-- ... (your existing HTML) ... -->
            <select id="Supplier" name="Supplier" class="textbox-style" style="width: 300px !important;" required autofocus oninput="updateModalContent('supplier', this.value)">
                ${supList.map(comp => `<option value="${comp.Value}" ${comp.Value === supplier ? 'selected' : ''}>${comp.Text}</option>`).join('')}
            </select>
            <!-- ... (the rest of your HTML) ... -->
        `;
    }

    // Call the function with the department list when needed
        openProdEditModal('prodIdValue', 'prodCodeValue', 'prodCatValue', 'prodNameValue', 'prodDescValue', 'prodPriceValue', 'qohValue', 'selectedCompanyValue', supList,'compNameValue');
    </script>



    <script src="~/error.js"></script>
    <script src="~/Scripts/modal.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    @{
        var failedMessage = TempData["AlertFailed"] as string;
        if (!string.IsNullOrEmpty(failedMessage))
        {
            <scipt>
                alert('@failedMessage');
            </scipt>
        }

        var alertMessage = TempData["AlertMessage"] as string;
        if (!string.IsNullOrEmpty(alertMessage))
        {
            <script>
                    alert('@alertMessage');
            </script>
        }

        var fieldAlert = TempData["AlertField"] as string;
        if (!string.IsNullOrEmpty(fieldAlert))
        {
            <script>
                    alert('@fieldAlert');
            </script>
        }

        var delAlert = TempData["AlertDelFailed"] as string;
        if (!string.IsNullOrEmpty(delAlert))
        {
            <script>
                alert('@delAlert');
            </script>
        }
    }

</section>


